import { createClient } from '@supabase/supabase-js';
import { Resend } from 'resend';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

const resend = new Resend(process.env.RESEND_API_KEY);

export async function POST(req) {
  try {
    const { email, series } = await req.json();
    const normalizedEmail = email?.toLowerCase();

    if (!normalizedEmail || !normalizedEmail.includes('@')) {
      return new Response(JSON.stringify({ message: 'Invalid email' }), {
        status: 400,
        headers: { 'Content-Type': 'application/json' },
      });
    }

    // Check for duplicates
    const { data: existing } = await supabase
      .from('notifications')
      .select('id')
      .eq('email', normalizedEmail)
      .eq('series', series)
      .maybeSingle();

    if (existing) {
      return new Response(JSON.stringify({ message: 'Email already subscribed' }), {
        status: 409,
        headers: { 'Content-Type': 'application/json' },
      });
    }

    const { error } = await supabase.from('notifications').insert([
      {
        email: normalizedEmail,
        series,
        created_at: new Date().toISOString()
      }
    ]);

    if (error) {
      console.error('Insert error:', error);
      return new Response(JSON.stringify({ message: 'Database error' }), {
        status: 500,
        headers: { 'Content-Type': 'application/json' },
      });
    }

    // Send confirmation email
    const { error: emailError } = await resend.emails.send({
      from: process.env.EMAIL_FROM,
      to: normalizedEmail,
      subject: `You're subscribed to '${series}'`,
      html: `<div style="font-family: sans-serif; line-height: 1.4;">
        <h2>✨ Thanks for subscribing!</h2>
        <p>You’ll be notified when <strong>${series}</strong> launches.</p>
        <p>If this wasn't you, just ignore this message.</p>
        <hr />
        <small>Generated by magic & caffeine.</small>
      </div>`
    });

    if (emailError) {
      console.warn('Email failed:', emailError);
    }

    return new Response(JSON.stringify({ message: 'Subscribed & email sent' }), {
      status: 200,
      headers: { 'Content-Type': 'application/json' },
    });

  } catch (err) {
    console.error('Unexpected error:', err);
    return new Response(JSON.stringify({ message: 'Unexpected error' }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' },
    });
  }
}
